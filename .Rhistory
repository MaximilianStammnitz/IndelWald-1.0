# Install and Load Packages
library(VennDiagram)
library(gridExtra)
library(stringr)
library(data.table)
library(GenomicRanges)
# Source Functions and Helper Files (~ 5 seconds)
source("1_Indelwald_functions.R")
load(paste0(main.path,"/Toy/Toy1_Stringent.Rdata"))
raw.calls(pindel.vcf = tumour.pindel,
platypus.vcf = tumour.platypus,
chromosome = "5",
sample = "Tumour_#1")
raw.sizes(pindel.vcf = tumour.pindel,
platypus.vcf = tumour.platypus,
chromosome = "5",
sample = "Tumour_#1")
tumour.1 <- vector(mode="list", length=5)
names(tumour.1) <- c("overlap", "pindel-Q",
"platypus-Q", "summary", "in-transcript")
## Take Platypus/Pindel-Intersection
tumour.1[[1]] <- overlap.vcfs(pindel.vcf = tumour.pindel,
platypus.vcf = tumour.platypus)
# Apply a Pindel-Quality Filter (default Threshold: 200)
tumour.1[[2]] <- pindel.filter(overlap = tumour.1$'overlap',
threshold = 200)
# Apply a Platypus-Quality Filter
tumour.1[[3]] <- platypus.filter(overlap = tumour.1$'pindel-Q',
threshold = 200)
# Summarise: Match Contig-Positions to Chromosomal Positions
tumour.1[[4]] <- indel.summary(contigs.coordinates = contig.lengths,
pindel.vcf = tumour.1$'platypus-Q'[[1]],
platypus.vcf = tumour.1$'platypus-Q'[[2]])
View(tumour.1$'summary')
## 4. Visualising Indels   ##
## ## ## ## ## ## ## ## ## ##
# Indel-Density Plot on Chromosome
indel.density(hits = tumour.1$'summary',
contigs.coordinates = contig.lengths,
genes = devil.genes,
chromosome = "5",
sample = "Tumour_#1")
# Rainfall Plot
rainfall(hits = tumour.1$'summary',
contigs.coordinates = contig.lengths,
chromosome = "5",
sample = "Tumour_#1",
split = "Y")
# Rainfall Plot with Size-Type Specifications
rainfall.types(hits = tumour.1$'summary',
chromosome = "5",
sample = "Tumour_#1")
# Indel BAF Plot (default: with Platypus Calls only)
# Pindel BAFs are - due to the algorithm's read retrieval - constrained to lower BAF ratios.
# However, they can be visualised by flagging pindel="Y"
indel.baf(hits = tumour.1$'summary',
contigs.coordinates = contig.lengths,
chromosome = "5",
sample = "Tumour_#1",
pindel = "N")
## 5. Transcript Filtering  ##
## ## ## ## ## ## ## ## ## ###
# Which Indels are found in ENSEMBL-Transcriptlist?
tumour.1[[5]] <- transcript.hits(hits = tumour.1$'summary',
chromosome = "5")
# Translate Transcripts/Genes to HGNC
tumour.1[[5]] <- hits.translate(hits = tumour.1$'in-transcript')
# Visualise these hits with one command
View(tumour.1$'in-transcript'[,c(12,14,1,3:7)])
## 6. Collect Stats  ##
## ## ## ## ## ## ## ##
final.results.plots(pindel.vcf = tumour.pindel,
platypus.vcf = tumour.platypus,
summary.list = tumour.1,
chromosome = "5",
sample = "Tumour_#1")
############ INDELWALD - HYBRID INDEL CALLING ##############
####################### Version 1.0 ########################
## CROSS-REFERENCING
## Last Update - 15/08/2015 ##
## mrs72 / Maximilian Stammnitz ##
## 1. Setting Up Work-Environment ##
## ## ## ## ## ## ## ## ## ## ## ###
# Install and Load Packages
library(stringr)
library(GenomicRanges)
library(VennDiagram)
library(gridExtra)
library(cluster)
# Source Functions and Helper Files (~ 5 seconds)
source("2_Indelwald_functions.R")
# 6 filtered (Toy 1) VCFs, Devil Chromosome 5
# 6 unfiltered VCFs of Platypus and Pindel, Devil Chromosome 5
load(paste0(main.path,"/Toy/Toy2_Crossreference.Rdata"))
## 2. Build-Up Cross-Reference Tables  ##
## ## ## ## ## ## ## ## ## ## ## ## ## ##
# Merge the Lists to one
prepared.sets <- cross.ref.prepare(filtered_high = filtered_200.both,
platypus = raw_transcripts.platypus,
pindel = raw_transcripts.pindel)
# Do the Cross-Referencing
cross.ref <- build.cross.ref(input = prepared.sets)
## 3. Shrink Set to Transcript Hits ##
## ## ## ## ## ## ## ## ## ## ## ## ##
cross.transcripts <- transcript.hits.cross(hits = cross.ref,
devil.transcripts,
devil.genes.translation,
devil.transcripts.translation)
# Visualise one example
View(cross.transcripts$'Tumour1')
## 4. Visualise Overlap in Exons of Chromosome 5 ##
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ###
# Define a Lower Threshold for Calling (default: 4)
# Define "Type" of Overlaps - below: all options chosen once
# Output: Venn-Diagram & Hierarchical Clustering and Heatmap between Tumours/Germline
# Removing different Indels (e.g. by length) with shared Positions
cross.DFTD.venn(hits = cross.transcripts,
threshold = 4,
type = "cleared",
titulo = "DFTD - Overlap (position-cleared Indels)")
# Unifying different Indels at the same Position
cross.DFTD.venn(hits = cross.transcripts,
threshold = 4,
type = "unified",
titulo = "DFTD - Overlap (position-unified Indels)")
# All unique Indels
cross.DFTD.venn(hits = cross.transcripts,
threshold = 4,
type = "all",
titulo = "DFTD - Overlap (all unique Indels)")
rm(list=ls())
############ INDELWALD - HYBRID INDEL CALLING ##############
####################### Version 1.0 ########################
## CROSS-REFERENCING
## Last Update - 15/08/2015 ##
## mrs72 / Maximilian Stammnitz ##
## 1. Setting Up Work-Environment ##
## ## ## ## ## ## ## ## ## ## ## ###
# Install and Load Packages
library(stringr)
library(GenomicRanges)
library(VennDiagram)
library(gridExtra)
library(cluster)
# Source Functions and Helper Files (~ 5 seconds)
source("2_Indelwald_functions.R")
getwd()
setwd("/Users/ms37/Desktop/Thesis/Indelwald-1.0/")
############ INDELWALD - HYBRID INDEL CALLING ##############
####################### Version 1.0 ########################
## CROSS-REFERENCING
## Last Update - 15/08/2015 ##
## mrs72 / Maximilian Stammnitz ##
## 1. Setting Up Work-Environment ##
## ## ## ## ## ## ## ## ## ## ## ###
# Install and Load Packages
library(stringr)
library(GenomicRanges)
library(VennDiagram)
library(gridExtra)
library(cluster)
# Source Functions and Helper Files (~ 5 seconds)
source("2_Indelwald_functions.R")
# 6 filtered (Toy 1) VCFs, Devil Chromosome 5
# 6 unfiltered VCFs of Platypus and Pindel, Devil Chromosome 5
load(paste0(main.path,"/Toy/Toy2_Crossreference.Rdata"))
## 2. Build-Up Cross-Reference Tables  ##
## ## ## ## ## ## ## ## ## ## ## ## ## ##
# Merge the Lists to one
prepared.sets <- cross.ref.prepare(filtered_high = filtered_200.both,
platypus = raw_transcripts.platypus,
pindel = raw_transcripts.pindel)
# Do the Cross-Referencing
cross.ref <- build.cross.ref(input = prepared.sets)
## 3. Shrink Set to Transcript Hits ##
## ## ## ## ## ## ## ## ## ## ## ## ##
cross.transcripts <- transcript.hits.cross(hits = cross.ref,
devil.transcripts,
devil.genes.translation,
devil.transcripts.translation)
# Visualise one example
View(cross.transcripts$'Tumour1')
## 4. Visualise Overlap in Exons of Chromosome 5 ##
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ###
# Define a Lower Threshold for Calling (default: 4)
# Define "Type" of Overlaps - below: all options chosen once
# Output: Venn-Diagram & Hierarchical Clustering and Heatmap between Tumours/Germline
# Removing different Indels (e.g. by length) with shared Positions
cross.DFTD.venn(hits = cross.transcripts,
threshold = 4,
type = "cleared",
titulo = "DFTD - Overlap (position-cleared Indels)")
# Unifying different Indels at the same Position
cross.DFTD.venn(hits = cross.transcripts,
threshold = 4,
type = "unified",
titulo = "DFTD - Overlap (position-unified Indels)")
# All unique Indels
cross.DFTD.venn(hits = cross.transcripts,
threshold = 4,
type = "all",
titulo = "DFTD - Overlap (all unique Indels)")
rm(list=ls())
